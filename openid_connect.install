<?php

/**
 * @file
 * Install, update, and uninstall functions for OpenID Connect module.
 */

/**
 * Implements hook_requirements().
 */
function openid_connect_requirements($phase) {
  $requirements = array();

  $available = openid_connect_is_jwt_library_available();
  $requirements['openid_connect_jwt'] = array(
    'title' => t('JWT library (lcobucci/jwt)'),
    'value' => $available ? t('Installed') : t('Not installed'),
    'description' => t('The "lcobucci/jwt" JWT library is required in order to validate ID tokens. It can be installed with Composer Manager.'),
  );
  if ($phase === 'install') {
    $requirements['severity'] = $available ? REQUIREMENT_OK : REQUIREMENT_ERROR;
  }
  else {
    $requirements['severity'] = $available ? REQUIREMENT_OK : REQUIREMENT_WARNING;
  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function openid_connect_uninstall() {
  db_delete('variable')->condition('name', 'openid_connect%', 'LIKE')->execute();
  cache_clear_all('variables', 'cache_bootstrap');
}

/**
 * Converts client settings to the new format.
 */
function openid_connect_update_7100() {
  foreach (openid_connect_get_plugins(TRUE) as $client) {
    $client_id = variable_get('openid_connect_client_' . $client['name'] . '_client_id', '');
    $client_secret = variable_get('openid_connect_client_' . $client['name'] . '_client_secret', '');

    $new_configuration = array(
      'client_id' => $client_id,
      'client_secret' => $client_secret,
    );
    variable_set('openid_connect_client_' . $client['name'], $new_configuration);
  }
}
